name: CI

on:
  push:
  pull_request:
  release:
    types: [published]
  schedule:
    # Daily at 5:12
    - cron: "12 5 * * *"

env:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"

jobs:
  list:
    runs-on: ubuntu-latest
    outputs:
      noxenvs: ${{ steps.noxenvs-matrix.outputs.noxenvs }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up nox
        uses: wntrblm/nox@2023.04.22
      - id: noxenvs-matrix
        run: |
          echo >>$GITHUB_OUTPUT noxenvs=$(
            nox --list-sessions --json | jq '[.[].session]'
          )

  ci:
    needs: list
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        noxenv: ${{ fromJson(needs.list.outputs.noxenvs) }}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: >
          sudo apt-get update &&
          sudo apt-get install -y libenchant-2-dev
        if: runner.os == 'Linux' && startsWith(matrix.noxenv, 'docs')
      - name: Install dependencies
        run: brew install enchant podman
        if: runner.os == 'macOS'
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: |
            3.10
            3.11
            3.12
            pypy3.10
          allow-prereleases: true
          cache: pip
      - name: Set up nox
        uses: wntrblm/nox@2023.04.22

      - name: Run nox
        run: nox -s "${{ matrix.noxenv }}" -- ${{ matrix.posargs }}

  automerge:
    needs: ci
    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Automatically merge allowed PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  packaging:
    needs: ci
    runs-on: ubuntu-latest

    environment:
      name: PyPI
      url: https://pypi.org/p/bowtie-json-schema

    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: pip
          python-version: "3.x"
      - name: Install dependencies
        run: python -m pip install build
      - name: Create packages
        run: python -m build .
      - name: Set up nox
        uses: wntrblm/nox@2023.04.22
      - name: Build a Bowtie PyApp
        run: nox -s app -- .
      - uses: actions/upload-artifact@v4
        with:
          name: pyapp
          path: app/bowtie*
      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
      - name: Create a Release
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app/bowtie*
          generate_release_notes: true

  report:
    needs: packaging
    uses: ./.github/workflows/report.yml
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

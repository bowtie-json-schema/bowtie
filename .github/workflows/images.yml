name: Bowtie Images

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "implementations/**"
      - ".github/workflows/images.yml"
  push:
    branches-ignore:
      - "wip*"
    paths:
      - "implementations/**"
      - ".github/workflows/images.yml"
    tags:
      - "v*"

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      images: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            clojure-json-schema: implementations/clojure-json-schema
            cpp-valijson: implementations/cpp-valijson
            dotnet-jsonschema-net: implementations/dotnet-jsonschema-net
            go-gojsonschema: implementations/go-gojsonschema
            go-jsonschema: implementations/go-jsonschema
            js-ajv: implementations/js-ajv
            js-hyperjump: implementations/js-hyperjump
            lua-jsonschema: implementations/lua-jsonschema
            python-fastjsonschema: implementations/python-fastjsonschema
            python-jschon: implementations/python-jschon
            python-jsonschema: implementations/python-jsonschema
            ruby-json_schemer: implementations/ruby-json_schemer
            rust-boon: implementations/rust-boon
            rust-jsonschema: implementations/rust-jsonschema
            ts-vscode-json-languageservice: implementations/ts-vscode-json-languageservice

  build:
    needs: changes
    if: ${{ needs.changes.outputs.images != '[]' && needs.changes.outputs.images!= '' }}
    runs-on: ubuntu-latest

    permissions:
      packages: write

    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.changes.outputs.images) }}

    steps:
      - uses: actions/checkout@v3

      - name: Install qemu
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: Build
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          context: implementations/${{ matrix.image }}
          containerfiles: |
            implementations/${{ matrix.image }}/Dockerfile
          image: ${{ matrix.image }}
          tags: latest ${{ github.sha }}
          archs: amd64, arm64

      - name: Publish
        id: push
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Smoke Test
        run: |
          python3 -m pip install bowtie-json-schema
          bowtie smoke -i "${{ steps.build_image.outputs.image-with-tag }}"
